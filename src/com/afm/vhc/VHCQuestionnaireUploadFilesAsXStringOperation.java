/**
 * Generated by Sybase AFX Compiler with templateJ
 * Compiler version - 2.2.4.179
 * mbs - false 
 */
package com.afm.vhc;

@SuppressWarnings("all")
public  class VHCQuestionnaireUploadFilesAsXStringOperation extends com.sybase.persistence.AbstractEntity implements com.sybase.persistence.MobileBusinessObject, com.sybase.reflection.ClassWithMetaData
{
    /** Begin code region: MetaData **/
    private static com.afm.vhc.intrnl.VHCQuestionnaireUploadFilesAsXStringOperationMetaData META_DATA = new com.afm.vhc.intrnl.VHCQuestionnaireUploadFilesAsXStringOperationMetaData();
    
    /**
     * return MetaData object  
     */
    public com.sybase.reflection.ClassMetaData getClassMetaData()
    {
        return META_DATA;
    }
    
    /**
     * return MetaData object  
     */
    public static com.sybase.reflection.EntityMetaData getMetaData()
    {
        return META_DATA;
    }
    
    /** End code region: MetaData **/
    protected static com.sybase.sup.client.persistence.EntityDelegate DELEGATE = 
        com.sybase.sup.client.persistence.DelegateFactory.createEntityDelegate("VHCQuestionnaireUploadFilesAsXStringOperation", com.afm.vhc.VHCQuestionnaireUploadFilesAsXStringOperation.class, "VHC.VHCQuestionnaireUploadFilesAsXStringOperation", META_DATA, com.afm.vhc.VHCDB.getDelegate());
    
    
    /** Begin code region: Properties **/
    private byte[] __PIM_XCONTENT ;  
    
    private java.lang.String __PIM_FILENAME  = com.sybase.afx.json.JsonValue.getString("");  
    
    private java.lang.String __PIM_VBELN  = com.sybase.afx.json.JsonValue.getString("");  
    
      
    
      
    
      
    
      
    
    private com.sybase.persistence.BigString __cvpOperation ;  
    
    private com.sybase.persistence.BigString __cvpOperationLobs ;  
    
    private boolean __PIM_XCONTENTValid ;  
    
    private boolean __PIM_FILENAMEValid ;  
    
    private boolean __PIM_VBELNValid ;  
    
    private long __id ;  
    
      
    
      
    
    private long __cvpOperationLength ;  
    
    private long __cvpOperationLobsLength ;  
    
    public long getAttributeLong(int id)
    {
        switch(id)
        {
        case 177:
            return getId();
        case 1481:
            return getCvpOperationLength();
        case 1482:
            return getCvpOperationLobsLength();
        default:
            return super.getAttributeLong(id);
        }
    }
    
    public void setAttributeLong(int id, long v)
    {
        switch(id)
        {
        case 177:
            setId((long)v);
            break;
        case 1481:
            setCvpOperationLength((long)v);
            break;
        case 1482:
            setCvpOperationLobsLength((long)v);
            break;
        default:
            super.setAttributeLong(id, v);
            break;
        }
    }
    public byte[] getAttributeNullableBinary(int id)
    {
        switch(id)
        {
        case 171:
            return getPIM_XCONTENT();
        default:
            return super.getAttributeNullableBinary(id);
        }
    }
    
    public void setAttributeNullableBinary(int id, byte[] v)
    {
        switch(id)
        {
        case 171:
            setPIM_XCONTENT((byte[])v);
            break;
        default:
            super.setAttributeNullableBinary(id, v);
            break;
        }
    }
    public com.sybase.persistence.BigString getAttributeNullableBigString(int id)
    {
        switch(id)
        {
        case 1088:
            return getCvpOperation();
        case 1089:
            return getCvpOperationLobs();
        default:
            return super.getAttributeNullableBigString(id);
        }
    }
    
    public java.lang.String getAttributeString(int id)
    {
        switch(id)
        {
        case 173:
            return getPIM_FILENAME();
        case 175:
            return getPIM_VBELN();
        default:
            return super.getAttributeString(id);
        }
    }
    
    public void setAttributeString(int id, java.lang.String v)
    {
        switch(id)
        {
        case 173:
            setPIM_FILENAME((java.lang.String)v);
            break;
        case 175:
            setPIM_VBELN((java.lang.String)v);
            break;
        default:
            super.setAttributeString(id, v);
            break;
        }
    }
    public boolean getAttributeBoolean(int id)
    {
        switch(id)
        {
        case 1098:
            return getPIM_XCONTENTValid();
        case 1099:
            return getPIM_FILENAMEValid();
        case 1100:
            return getPIM_VBELNValid();
        default:
            return super.getAttributeBoolean(id);
        }
    }
    
    public void setAttributeBoolean(int id, boolean v)
    {
        switch(id)
        {
        case 1098:
            setPIM_XCONTENTValid((boolean)v);
            break;
        case 1099:
            setPIM_FILENAMEValid((boolean)v);
            break;
        case 1100:
            setPIM_VBELNValid((boolean)v);
            break;
        default:
            super.setAttributeBoolean(id, v);
            break;
        }
    }
    
    public Object getAttributeJson(int id)
    {
        switch(id)
        {
        default:
            return super.getAttributeJson(id);
        }
    }
    
    public void setAttributeJson(int id, Object value)
    {
        switch(id)
        {
        default:
            super.setAttributeJson(id, value);
            break;
        }
    }
    /** End code region: Properties **/
    
    /** Begin code region: Constructor and init **/
    /**
     * Creates an instance of com.afm.vhc.VHCQuestionnaireUploadFilesAsXStringOperation  
     */
    public VHCQuestionnaireUploadFilesAsXStringOperation()
    {
        setEntityDelegate(DELEGATE);
        _init();
    }
    protected void _init()
    {
        
    }
    /** End code region: Constructor and init **/
    
    /**
     * get the value of PIM_XCONTENT  
     */
    public byte[] getPIM_XCONTENT()
    {
        
        if(__PIM_XCONTENTValid || _isNew)
        {
            return __PIM_XCONTENT;
        }
        
        try
        {
            com.sybase.persistence.ConnectionWrapper _conn = _getConn();;
            try
            {
                String sql = "select x.\"a\" from vhc_1_0_vhcquestionnaireuploadfilesasxstringoperation x where (x.\"pending\" = 1 or not exists (select x_os.\"d\" from \"vhc_1_0_vhcquestionnaireuploadfilesasxstringoperation_os\" x_os where x_os.\"d\" = x.\"d\")) and x.\"d\"=?";
                if(this._isOriginalState)
                {
                	sql = "select x.\"a\" from vhc_1_0_vhcquestionnaireuploadfilesasxstringoperation_os x where x.\"d\"=?";
                }
                com.sybase.persistence.ManagedQuery _m_ps = com.sybase.persistence.ManagedQuery.prepare(_conn, sql);
                com.sybase.persistence.StatementWrapper ps = _m_ps.getStatement();
                com.sybase.afx.ulj.StatementUtil.setLong(_conn, ps, "id", 1, __id);
                com.sybase.persistence.ResultSetWrapper rs = ps.executeQuery();
                if (com.sybase.afx.ulj.ResultUtil.next(rs))
                {
                    boolean saveDirty = _isDirty;
                    this.__PIM_XCONTENT = com.sybase.afx.ulj.ResultUtil.getNullableBinary(rs,"PIM_XCONTENT",1);
                    _isDirty = saveDirty;
                }
                _m_ps.close();
            }
            catch(com.sybase.persistence.PersistenceException ex)
            {
                throw ex;
            }
        }
        finally
        {
            com.afm.vhc.VHCDB.getDelegate().releaseDBConnection();
        }
        __PIM_XCONTENTValid = true;
        return __PIM_XCONTENT;
    }
    
    /**
     * Set the value of PIM_XCONTENT  
     */
    public void setPIM_XCONTENT(byte[] value)
    {
        __PIM_XCONTENTValid = true;
        _isDirty = true;
        __PIM_XCONTENT = value;
    }       
    /**
     * get the value of PIM_FILENAME  
     */
    public java.lang.String getPIM_FILENAME()
    {
        
        if(__PIM_FILENAMEValid || _isNew)
        {
            return __PIM_FILENAME;
        }
        
        try
        {
            com.sybase.persistence.ConnectionWrapper _conn = _getConn();;
            try
            {
                String sql = "select x.\"b\" from vhc_1_0_vhcquestionnaireuploadfilesasxstringoperation x where (x.\"pending\" = 1 or not exists (select x_os.\"d\" from \"vhc_1_0_vhcquestionnaireuploadfilesasxstringoperation_os\" x_os where x_os.\"d\" = x.\"d\")) and x.\"d\"=?";
                if(this._isOriginalState)
                {
                	sql = "select x.\"b\" from vhc_1_0_vhcquestionnaireuploadfilesasxstringoperation_os x where x.\"d\"=?";
                }
                com.sybase.persistence.ManagedQuery _m_ps = com.sybase.persistence.ManagedQuery.prepare(_conn, sql);
                com.sybase.persistence.StatementWrapper ps = _m_ps.getStatement();
                com.sybase.afx.ulj.StatementUtil.setLong(_conn, ps, "id", 1, __id);
                com.sybase.persistence.ResultSetWrapper rs = ps.executeQuery();
                if (com.sybase.afx.ulj.ResultUtil.next(rs))
                {
                    boolean saveDirty = _isDirty;
                    this.__PIM_FILENAME = com.sybase.afx.ulj.ResultUtil.getString(rs,"PIM_FILENAME",1);
                    _isDirty = saveDirty;
                }
                _m_ps.close();
            }
            catch(com.sybase.persistence.PersistenceException ex)
            {
                throw ex;
            }
        }
        finally
        {
            com.afm.vhc.VHCDB.getDelegate().releaseDBConnection();
        }
        __PIM_FILENAMEValid = true;
        return __PIM_FILENAME;
    }
    
    /**
     * Set the value of PIM_FILENAME  
     */
    public void setPIM_FILENAME(java.lang.String value)
    {
        __PIM_FILENAMEValid = true;
        _isDirty = true;
        __PIM_FILENAME = value;
    }       
    /**
     * get the value of PIM_VBELN  
     */
    public java.lang.String getPIM_VBELN()
    {
        
        if(__PIM_VBELNValid || _isNew)
        {
            return __PIM_VBELN;
        }
        
        try
        {
            com.sybase.persistence.ConnectionWrapper _conn = _getConn();;
            try
            {
                String sql = "select x.\"c\" from vhc_1_0_vhcquestionnaireuploadfilesasxstringoperation x where (x.\"pending\" = 1 or not exists (select x_os.\"d\" from \"vhc_1_0_vhcquestionnaireuploadfilesasxstringoperation_os\" x_os where x_os.\"d\" = x.\"d\")) and x.\"d\"=?";
                if(this._isOriginalState)
                {
                	sql = "select x.\"c\" from vhc_1_0_vhcquestionnaireuploadfilesasxstringoperation_os x where x.\"d\"=?";
                }
                com.sybase.persistence.ManagedQuery _m_ps = com.sybase.persistence.ManagedQuery.prepare(_conn, sql);
                com.sybase.persistence.StatementWrapper ps = _m_ps.getStatement();
                com.sybase.afx.ulj.StatementUtil.setLong(_conn, ps, "id", 1, __id);
                com.sybase.persistence.ResultSetWrapper rs = ps.executeQuery();
                if (com.sybase.afx.ulj.ResultUtil.next(rs))
                {
                    boolean saveDirty = _isDirty;
                    this.__PIM_VBELN = com.sybase.afx.ulj.ResultUtil.getString(rs,"PIM_VBELN",1);
                    _isDirty = saveDirty;
                }
                _m_ps.close();
            }
            catch(com.sybase.persistence.PersistenceException ex)
            {
                throw ex;
            }
        }
        finally
        {
            com.afm.vhc.VHCDB.getDelegate().releaseDBConnection();
        }
        __PIM_VBELNValid = true;
        return __PIM_VBELN;
    }
    
    /**
     * Set the value of PIM_VBELN  
     */
    public void setPIM_VBELN(java.lang.String value)
    {
        __PIM_VBELNValid = true;
        _isDirty = true;
        __PIM_VBELN = value;
    }       
    /**
     * get the value of cvpOperation  
     */
    public com.sybase.persistence.BigString getCvpOperation()
    {
        
        if(__cvpOperation==null)
        {
        	__cvpOperation = new com.sybase.persistence.internal.BigStringImpl(this, "cvpOperation");
        }
        return __cvpOperation;
    }       
    /**
     * get the value of cvpOperationLobs  
     */
    public com.sybase.persistence.BigString getCvpOperationLobs()
    {
        
        if(__cvpOperationLobs==null)
        {
        	__cvpOperationLobs = new com.sybase.persistence.internal.BigStringImpl(this, "cvpOperationLobs");
        }
        return __cvpOperationLobs;
    }       
    /**
     * get the value of PIM_XCONTENTValid  
     */
    private boolean getPIM_XCONTENTValid()
    {
        
        return __PIM_XCONTENTValid;
    }
    
    /**
     * Set the value of PIM_XCONTENTValid  
     */
    private void setPIM_XCONTENTValid(boolean value)
    {
        __PIM_XCONTENTValid = value;
    }       
    /**
     * get the value of PIM_FILENAMEValid  
     */
    private boolean getPIM_FILENAMEValid()
    {
        
        return __PIM_FILENAMEValid;
    }
    
    /**
     * Set the value of PIM_FILENAMEValid  
     */
    private void setPIM_FILENAMEValid(boolean value)
    {
        __PIM_FILENAMEValid = value;
    }       
    /**
     * get the value of PIM_VBELNValid  
     */
    private boolean getPIM_VBELNValid()
    {
        
        return __PIM_VBELNValid;
    }
    
    /**
     * Set the value of PIM_VBELNValid  
     */
    private void setPIM_VBELNValid(boolean value)
    {
        __PIM_VBELNValid = value;
    }       
    /**
     * get the value of id  
     */
    public long getId()
    {
        
        return __id;
    }
    
    /**
     * Set the value of id  
     */
    public void setId(long value)
    {
        if(__id != value)
        {
            _isDirty = true;
        }
        __id = value;
    }       
    /**
     * get the value of cvpOperationLength  
     */
    public long getCvpOperationLength()
    {
        
        return __cvpOperationLength;
    }
    
    /**
     * Set the value of cvpOperationLength  
     */
    public void setCvpOperationLength(long value)
    {
        if(__cvpOperationLength != value)
        {
            _isDirty = true;
        }
        __cvpOperationLength = value;
    }       
    /**
     * get the value of cvpOperationLobsLength  
     */
    public long getCvpOperationLobsLength()
    {
        
        return __cvpOperationLobsLength;
    }
    
    /**
     * Set the value of cvpOperationLobsLength  
     */
    public void setCvpOperationLobsLength(long value)
    {
        if(__cvpOperationLobsLength != value)
        {
            _isDirty = true;
        }
        __cvpOperationLobsLength = value;
    }
    
    /**
     * Search mobile business object using surrogateKey
     * @param id surrogateKey
     * @return mobile business object
     */
    public static com.afm.vhc.VHCQuestionnaireUploadFilesAsXStringOperation find(long id)
    {
        String intervalName = null;
        if(com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.isEnabled)
        {
            intervalName = "VHCQuestionnaireUploadFilesAsXStringOperation.find()";
            com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.getInstance().startInterval(intervalName, com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.PersistenceRead);
        }
        try
        {
            Object[] keys = new Object[]{id};
            return (com.afm.vhc.VHCQuestionnaireUploadFilesAsXStringOperation)(DELEGATE.findEntityWithKeys(keys));
        }
        finally
        {
            if(com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.isEnabled)
            {
                com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.getInstance().stopInterval(intervalName);
            }
        }
    }
    
    /**
     * Get the mobile business object by surrogate key.
     * @param id surrogate key
     * @return the mobile business object for the surroget key
     * @exception ObjectNotFoundException Thrown if unable to retrieve mobile business object.
     */
    public static com.afm.vhc.VHCQuestionnaireUploadFilesAsXStringOperation load(long id)
    {
        return (com.afm.vhc.VHCQuestionnaireUploadFilesAsXStringOperation)(DELEGATE.load(id));
    }
    
    /**
     * Get surroget key of the mobile business object  
     */
    public java.lang.Long _pk()
    {
        return (java.lang.Long)i_pk();
    }
    
    /** Begin code region: Finder methods **/
    /**
     * Find a List of Com.afm.vhc.VHCQuestionnaireUploadFilesAsXStringOperation
     * @exception PersistentException Thrown if unable to retrieve mobile business object.
     */
    public static com.sybase.collections.GenericList<com.afm.vhc.VHCQuestionnaireUploadFilesAsXStringOperation> findAll(int skip, int take)
    {
        String intervalName = null;
        if(com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.isEnabled)
        {
            intervalName = "VHCQuestionnaireUploadFilesAsXStringOperation.findAll";
            com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.getInstance().startInterval(intervalName, com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.PersistenceRead);
        }
        try
        {
            String _selectSQL = "select " + " o.\"pending\",o.\"_pc\",o.\"_rp\",o.\"_rf\",o.\"d\",o.\"_rc\",o.\"_ds\",o.\"cvpOperation_length\",o.\"cvpOperationLobs_length\" from \"vhc_1_0_vhcquestionnaireuploadfilesasxstringoperation\" o where (((o.\"pending\" = 1 or not exists (select o_os.\"d\" from \"vhc_1_0_vhcquestionnaireuploadfile"
                                                + "sasxstringoperation_os\" o_os where o_os.\"d\" = o.\"d\"))))"; 
            return (com.sybase.collections.GenericList<com.afm.vhc.VHCQuestionnaireUploadFilesAsXStringOperation>)(Object)DELEGATE.findWithSQL(skip, take, _selectSQL, com.afm.vhc.VHCQuestionnaireUploadFilesAsXStringOperation.class);
        }
        finally
        {
            if(com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.isEnabled)
            {
                com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.getInstance().stopInterval(intervalName);
            }
        }
    }
    /**
     * Find a list of com.afm.vhc.VHCQuestionnaireUploadFilesAsXStringOperation  
     */
    public static com.sybase.collections.GenericList<com.afm.vhc.VHCQuestionnaireUploadFilesAsXStringOperation> findAll()
    {
        return findAll(0, Integer.MAX_VALUE);
    }
    
    /**
     * Returns the MBOs that are updated locally but not submitted.  
     */
    public static com.sybase.collections.GenericList<com.afm.vhc.VHCQuestionnaireUploadFilesAsXStringOperation> getPendingObjects(int skip, int take)
    {
        return (com.sybase.collections.GenericList<com.afm.vhc.VHCQuestionnaireUploadFilesAsXStringOperation>)(Object)DELEGATE.getPendingObjects(skip, take);
    }
    
    /**
     * Returns the MBOs that are updated locally but not submmited.  
     */
    public static com.sybase.collections.GenericList<com.afm.vhc.VHCQuestionnaireUploadFilesAsXStringOperation> getPendingObjects()
    {
        return (com.sybase.collections.GenericList<com.afm.vhc.VHCQuestionnaireUploadFilesAsXStringOperation>)(Object)DELEGATE.getPendingObjects();
    }
    
    /** End code region: Finder methods **/
    /**
     * Returns the log record list.  
     */
    public com.sybase.collections.GenericList<com.sybase.persistence.LogRecord> getLogRecords()
    {
        return com.afm.vhc.LogRecordImpl.findByEntity("VHCQuestionnaireUploadFilesAsXStringOperation", keyToString());
    }
    
    
    
    
    
    
    
    
    
    
    
    /**
     * Submit pending operations of the mobile business object (ready for sending to server)  
     */
    public static void submitPendingOperations()
    {
        DELEGATE.submitPendingOperations();
    }
    
    /**
     * Cancel all the pending operations (not submitted operation).  
     */
    public static void cancelPendingOperations()
    {
        DELEGATE.cancelPendingOperations();
    }
    
    /**
     * Get the last called operation of the mobile business object  
     */
    public String getLastOperation()
    {
        if (getPendingChange() == 'C')
        {
            return "UploadFilesAsXString";
        }
        return null;
    }
    
    public com.afm.vhc.VHCQuestionnaireUploadFilesAsXStringOperation getDownloadState()
    {
        return (com.afm.vhc.VHCQuestionnaireUploadFilesAsXStringOperation)i_getDownloadState();
    }
    
    public com.afm.vhc.VHCQuestionnaireUploadFilesAsXStringOperation getOriginalState()
    {
        return (com.afm.vhc.VHCQuestionnaireUploadFilesAsXStringOperation)i_getOriginalState();
    }
    
    /**
     * Install a callback handler
     */
    public static void registerCallbackHandler(com.sybase.persistence.CallbackHandler handler)
    {
        DELEGATE.registerCallbackHandler(handler);
    }
    
    public static com.sybase.persistence.CallbackHandler getCallbackHandler()
    {
        return DELEGATE.getCallbackHandler();
    }
}